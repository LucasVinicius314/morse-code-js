let { code } = require('./code')

console.log('====  morse  ====')
console.log(code)

code = code.replace(/[^\-\.]\.\-[^\-\.]/g, ' a ')
code = code.replace(/[^\-\.]\-\.\.\.[^\-\.]/g, ' b ')
code = code.replace(/[^\-\.]\-\.\-\.[^\-\.]/g, ' c ')
code = code.replace(/[^\-\.]\-\.\.[^\-\.]/g, ' d ')
code = code.replace(/[^\-\.]\.[^\-\.]/g, ' e ')
code = code.replace(/[^\-\.]\.\.\-\.[^\-\.]/g, ' f ')
code = code.replace(/[^\-\.]\-\-\.[^\-\.]/g, ' g ')
code = code.replace(/[^\-\.]\.\.\.\.[^\-\.]/g, ' h ')
code = code.replace(/[^\-\.]\.\.[^\-\.]/g, ' i ')
code = code.replace(/[^\-\.]\.\-\-\-[^\-\.]/g, ' j ')
code = code.replace(/[^\-\.]\-\.\-[^\-\.]/g, ' k ')
code = code.replace(/[^\-\.]\.\-\.\.[^\-\.]/g, ' l ')
code = code.replace(/[^\-\.]\-\-[^\-\.]/g, ' m ')
code = code.replace(/[^\-\.]\-\.[^\-\.]/g, ' n ')
code = code.replace(/[^\-\.]\-\-\-[^\-\.]/g, ' o ')
code = code.replace(/[^\-\.]\.\-\-\.[^\-\.]/g, ' p ')
code = code.replace(/[^\-\.]\-\-\.\-[^\-\.]/g, ' q ')
code = code.replace(/[^\-\.]\.\-\.[^\-\.]/g, ' r ')
code = code.replace(/[^\-\.]\.\.\.[^\-\.]/g, ' s ')
code = code.replace(/[^\-\.]\-[^\-\.]/g, ' t ')
code = code.replace(/[^\-\.]\.\.\-[^\-\.]/g, ' u ')
code = code.replace(/[^\-\.]\.\.\.\-[^\-\.]/g, ' v ')
code = code.replace(/[^\-\.]\.\-\-[^\-\.]/g, ' w ')
code = code.replace(/[^\-\.]\-\.\.\-[^\-\.]/g, ' x ')
code = code.replace(/[^\-\.]\-\.\-\-[^\-\.]/g, ' y ')
code = code.replace(/[^\-\.]\-\-\.\.[^\-\.]/g, ' z ')
code = code.replace(/[^\-\.]\.\-\-\-\-[^\-\.]/g, ' 1 ')
code = code.replace(/[^\-\.]\.\.\-\-\-[^\-\.]/g, ' 2 ')
code = code.replace(/[^\-\.]\.\.\.\-\-[^\-\.]/g, ' 3 ')
code = code.replace(/[^\-\.]\.\.\.\.\-[^\-\.]/g, ' 4 ')
code = code.replace(/[^\-\.]\-\.\-\-\.[^\-\.]/g, ' ( ')
code = code.replace(/[^\-\.]\-\.\-\-\.\-[^\-\.]/g, ' ) ')
code = code.replace(/[^\-\.]\.\-\.\-\.\-[^\-\.]/g, ' . ')
code = code.replace(/(\S)\s/g, '$1')

console.log('====  raw  ====')
console.log(code)

console.log('====  eval  ====')
eval(code)